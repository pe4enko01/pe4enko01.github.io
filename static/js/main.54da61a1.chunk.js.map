{"version":3,"sources":["components/Auth/Auth.module.css","components/ShowTimeComponent/ShowTime.module.css","components/StartStopButtonComponent/StartStopButton.module.css","components/Task/Task.module.css","components/addTask/AddTask.module.css","components/TimeComponent/Time.module.css","components/Header/Header.module.css","components/PopUpHeaderSetting/PopUpHeaderSetting.module.css","store/timerReducer.js","store/addTaskReducer.js","store/HeaderReducer.js","store/AuthReducer.js","store/index.js","components/ShowTimeComponent/ShowTime.component.jsx","components/StartStopButtonComponent/StartStopButton.component.jsx","components/TimeComponent/TimeComponent.jsx","components/IncDecPomodor/IncDecPomodor.jsx","components/Task/sm-music-harp-1.mp3","components/Task/2.mp3","components/Task/3.mp3","components/Task/Tack.jsx","components/addTask/AddTask.jsx","components/Header/Header.jsx","components/PopUpHeaderSetting/PopUpHeaderSetting.jsx","components/Auth/Auth.jsx","App.js","reportWebVitals.js","index.js","components/IncDecPomodor/IncDecPomodor.module.css","App.module.css"],"names":["module","exports","timerReducer","createSlice","name","initialState","time","startStopButton","startButtonInfo","pomodoroBreakState","checkStateOfPomodoroSkipStateButton","skipstatic","setTimerOfPomodoro","setBreakeOfPomodoro","reducers","setStart","state","setStop","changeTime","toggle","action","arrOfTask","payload","filter","item","pomodoroCheck","length","toggleStartButtonfromTask","togglestartStopButton","showButtonInfo","setTimer","selectPomodoroMode","selectBreackMode","checkStateOfPomodoroSkipState","setBreakeTimer","changeHelper","changeHelperFalse","timerActions","actions","addTaskReducer","task","arrOfTasks","incDec","pomodoroTime","breakeTime","buttonStartTimer","donePomodoros","taskIsDone","taskState","addTask","addTaskToArr","key","Math","random","act","inputInfo","countOfPomodoros","push","deleteLastElemOfArr","setPomodoroTime","map","setPomodoroT","addLocalStorageToArr","lol","JSON","parse","deleteTask","pomodoroCheckToFalse","incdonePomodoros","donePomodorosAddToArr","incPomodoro","decPomodoro","clearPomodoroCounter","checkPomodor","reCheckPomodor","uncheckPomodor","buttonStartTimerToggle","i","buttonStartTimerToFalse","setPonodoroClickTask","setBreakeClickTask","deleteAllTasks","addTaskActions","HeaderReducer","openPopUpSettings","openAuth","soundCheck","infinitMod","setOpenPopUpSettings","setClosePopUpSettings","setOpenAuth","setCloseAuth","setsoundCheck","setInfinitMod","setNoInfinitMod","HeaderActions","AuthReducer","tokenId","setTokenId","AuthActions","store","configureStore","reducer","timer","header","auth","ShowTime","useSelector","className","styles","floor","StartStopButton","dispatch","useDispatch","button","onClick","TimerComponent","stateOfPomodoroSkipStateButton","PomodoroTimer","useEffect","localStorage","getItem","useState","mainTimeBlock","pomodoroBreakeButtonsContainer","pomodorocheckButton","breakecheckButton","StartButtonAndSkippButtonContainer","skipButtonClass","IncDecPomodor","dispach","incdecContainer","incdecScreen","incdecButton","Task","props","arr","BreakeTimerSelector","pomororoTimeProps","setComponentTimer","BreakeTimer","changeTimer","pomodoroMode","skipTimer","propskipTimer","useSound","boopSfx1","play1","boopSfx2","play2","boopSfx3","play3","taskKey","interval","setTimeout","setItem","propsdonePomodoros","clearTimeout","checPomodoroProp","stringify","propTaskiIsDone","taskContainerCheck","taskContainer","taskTextDone","taskText","items","taskContainerDone","deleteButtonContainer","deleteTaskBtton","AddTask","toggleTask","usetoggleTask","taskArr","recomend","recomendChange","infinitMode","taskContainerNone","closeaTask","taskInputContainer","placeholder","inputTask","value","onChange","e","target","addTaskFotter","inputButton","newTaskArr","cancelTaskButton","Header","idToken","headerMainContainer","headerLogo","headerButtonsContainer","headerButtonSettings","headerButtonLogin","clear","PopUpHeaderSetting","alarmVars","setAlarmVars","popUp","popUpClose","closest","popUpContent","popUpContentHeader","popUpContentH1","popUpContentExit","popUpContentTimeSetUp","popUpContentTimeSetUpHeader","popUpContentTimeSetUpInputs","popUpContentTimeSetUpInputOfPomodoro","type","popUpContentTimeSetUpInputOfBreake","popUpContentAlarmSetUp","popUpContentAlarmHeader","popUpContentAlarmInputs","popUpContentAlarmVars","outerText","popUpContentAlarmVar","popUpContentChcketBox","defaultChecked","checkbox","parentElement","children","checked","Auth","emailInputRef","useRef","passwordInputRef","isLogin","setIsLogin","isLoading","setIsLoading","ChangeIsLoginHendler","totalTime","settotalTime","timeSignIn","Date","getTime","timeSignOut","authFormContainer","onSubmit","preventDefault","url","enteredEmail","current","enteredPassword","fetch","method","body","email","password","returnSecureToken","headers","then","res","ok","json","data","Error","idTokenToLocal","catch","err","alert","message","authFormEmail","ref","authFormPassword","authSubmitButton","authFotter","App","AppBreake","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54da61a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUpContent\":\"Auth_popUpContent__3xJf1\",\"popUp\":\"Auth_popUp__3AyK8\",\"popUpClose\":\"Auth_popUpClose__1jHsc\",\"popUpContentHeader\":\"Auth_popUpContentHeader__3SrsL\",\"popUpContentExit\":\"Auth_popUpContentExit__5BIJT\",\"authFormContainer\":\"Auth_authFormContainer__2UYMz\",\"popUpContentH1\":\"Auth_popUpContentH1__26Bzb\",\"authFormEmail\":\"Auth_authFormEmail__yGXxt\",\"authFormPassword\":\"Auth_authFormPassword__3GT-E\",\"authSubmitButton\":\"Auth_authSubmitButton__Z5n39\",\"authFotter\":\"Auth_authFotter__-s46M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"ShowTime_timer__37i1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"StartStopButton_button__rQzsY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskTextContainer\":\"Task_taskTextContainer__1XXnI\",\"taskContainer\":\"Task_taskContainer__3Dnn_\",\"taskContainerDone\":\"Task_taskContainerDone__2DF7M\",\"taskText\":\"Task_taskText__dpqUh\",\"taskContainerCheck\":\"Task_taskContainerCheck__2B25A\",\"deleteButtonContainer\":\"Task_deleteButtonContainer__nVIDx\",\"taskTextDone\":\"Task_taskTextDone__1hyYZ\",\"deleteTaskBtton\":\"Task_deleteTaskBtton__2EEbR\",\"taskInputContainer\":\"Task_taskInputContainer__3IyOm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"AddTask_addTask__2ToTS\",\"closeaTask\":\"AddTask_closeaTask__3ghzO\",\"taskContainer\":\"AddTask_taskContainer__3hc-W\",\"taskContainerNone\":\"AddTask_taskContainerNone__DDO77\",\"inputTask\":\"AddTask_inputTask__3DiOS\",\"cancelTaskButton\":\"AddTask_cancelTaskButton__1ezoM\",\"inputButton\":\"AddTask_inputButton__jRLmh\",\"addTaskFotter\":\"AddTask_addTaskFotter__DSktY\",\"taskInputContainer\":\"AddTask_taskInputContainer__2CwKS\",\"recomend\":\"AddTask_recomend__1C2We\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTimeBlock\":\"Time_mainTimeBlock__2YLr7\",\"button\":\"Time_button__1u0JF\",\"timer\":\"Time_timer__q79bB\",\"pomodoroBreakeButtonsContainer\":\"Time_pomodoroBreakeButtonsContainer__Fjeh5\",\"pomodorocheckButton\":\"Time_pomodorocheckButton__3Kx_E\",\"breakecheckButton\":\"Time_breakecheckButton__2jQtB\",\"skipButtonClass\":\"Time_skipButtonClass__xvS9-\",\"StartButtonAndSkippButtonContainer\":\"Time_StartButtonAndSkippButtonContainer__20XUt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerMainContainer\":\"Header_headerMainContainer__2KjIY\",\"headerLogo\":\"Header_headerLogo__19P1l\",\"headerButtonSettings\":\"Header_headerButtonSettings__2i5vN\",\"headerButtonLogin\":\"Header_headerButtonLogin__2HioA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popUpContent\":\"PopUpHeaderSetting_popUpContent__105Vx\",\"popUp\":\"PopUpHeaderSetting_popUp__3IJK_\",\"popUpClose\":\"PopUpHeaderSetting_popUpClose__2uZS2\",\"popUpContentHeader\":\"PopUpHeaderSetting_popUpContentHeader__bAEmU\",\"popUpContentExit\":\"PopUpHeaderSetting_popUpContentExit__KFE95\",\"popUpContentH1\":\"PopUpHeaderSetting_popUpContentH1__1bw3v\",\"popUpContentTimeSetUpHeader\":\"PopUpHeaderSetting_popUpContentTimeSetUpHeader__1lD2R\",\"popUpContentTimeSetUp\":\"PopUpHeaderSetting_popUpContentTimeSetUp__1IZbO\",\"popUpContentTimeSetUpInputs\":\"PopUpHeaderSetting_popUpContentTimeSetUpInputs__3cPkw\",\"popUpContentTimeSetUpInputOfPomodoro\":\"PopUpHeaderSetting_popUpContentTimeSetUpInputOfPomodoro__2eKVW\",\"popUpContentTimeSetUpInputOfBreake\":\"PopUpHeaderSetting_popUpContentTimeSetUpInputOfBreake__G36zS\",\"popUpContentAlarmInputs\":\"PopUpHeaderSetting_popUpContentAlarmInputs__hNPjY\",\"popUpContentAlarmVar\":\"PopUpHeaderSetting_popUpContentAlarmVar__OYYw6\",\"popUpContentAlarmSetUp\":\"PopUpHeaderSetting_popUpContentAlarmSetUp__VoAHf\",\"popUpContentAlarmHeader\":\"PopUpHeaderSetting_popUpContentAlarmHeader__256GK\",\"popUpContentChcketBox\":\"PopUpHeaderSetting_popUpContentChcketBox__1S_g5\",\"checkbox\":\"PopUpHeaderSetting_checkbox__AU28C\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst timerReducer = createSlice({\r\n    name:'timer',\r\n    initialState: {time: 1500, startStopButton: false, startButtonInfo: \"Старт\",\r\n     pomodoroBreakState: true, checkStateOfPomodoroSkipStateButton:\"none\", skipstatic:false,\r\n      setTimerOfPomodoro:25,setBreakeOfPomodoro:5},\r\n    reducers: {\r\n        \r\n        setStart(state){\r\n            state.startButtonInfo = \"Старт\";\r\n        },\r\n        setStop(state){\r\n            state.startButtonInfo = \"Стоп\";\r\n        },\r\n        changeTime(state){\r\n            state.time = state.time - 1;\r\n        },\r\n        toggle(state, action){\r\n           let arrOfTask = action.payload;\r\n           arrOfTask = arrOfTask.filter(item => item.pomodoroCheck === true);\r\n\r\n           if(arrOfTask.length === 1){\r\n               state.startStopButton = !state.startStopButton;\r\n           }\r\n        },\r\n        toggleStartButtonfromTask(state, action){\r\n            if(action.payload === true && state.startButtonInfo === \"Стоп\"){\r\n                state.startStopButton = !state.startStopButton;\r\n            }\r\n\r\n        },\r\n        togglestartStopButton(state){\r\n            state.startStopButton = false;\r\n        },\r\n        showButtonInfo(state){\r\n            if(state.startStopButton===true){\r\n                state.startButtonInfo = \"Стоп\";\r\n            }else{\r\n                state.startButtonInfo = \"Старт\";\r\n            }\r\n\r\n        },\r\n        setTimer(state, action){\r\n            state.time = action.payload;\r\n        },\r\n        selectPomodoroMode(state){\r\n            state.pomodoroBreakState = true;\r\n        },\r\n        selectBreackMode(state){\r\n            state.pomodoroBreakState = false;\r\n        },\r\n        checkStateOfPomodoroSkipState(state, action){\r\n            state.checkStateOfPomodoroSkipStateButton = action.payload;\r\n        },\r\n        setTimerOfPomodoro(state, action){\r\n            state.setTimerOfPomodoro = action.payload;\r\n        },\r\n        setBreakeTimer(state, action){\r\n            state.setBreakeOfPomodoro = action.payload;\r\n        },\r\n        changeHelper(state){\r\n            state.skipstatic = true;\r\n        },\r\n        changeHelperFalse(state){\r\n            state.skipstatic = false;\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const timerActions =  timerReducer.actions;\r\n\r\nexport default timerReducer;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst addTaskReducer = createSlice({\r\n    name: 'addTask',\r\n    initialState: { task: \"\", arrOfTasks: [], incDec: 1, pomodoroCheck: false, \r\n    pomodoroTime: 1500, breakeTime:300, buttonStartTimer: false, donePomodoros: 0, taskIsDone:false, taskState: \"Pomodoro\" },\r\n\r\n    reducers: {\r\n        addTask(state, action) {\r\n            state.task = action.payload;\r\n        },\r\n\r\n        addTaskToArr(state, action) {\r\n            const key = Math.random();\r\n            const act = action.payload.inputInfo;\r\n            const countOfPomodoros = action.payload.countOfPomodoros;\r\n            const pomodoroCheck = action.payload.pomodoroCheck;\r\n            const pomodoroTime = state.pomodoroTime;\r\n            const buttonStartTimer = false;\r\n            const donePomodoros = state.donePomodoros;\r\n            const taskIsDone = state.taskIsDone;\r\n            const taskState = state.taskState;\r\n            state.arrOfTasks.push({ buttonStartTimer, act, countOfPomodoros, pomodoroCheck, pomodoroTime, donePomodoros,taskIsDone, taskState, key });\r\n\r\n        },\r\n        deleteLastElemOfArr(state){\r\n            state.arrOfTasks = state.arrOfTasks.filter(item => item.act !== \"Нет\");\r\n        },\r\n        setPomodoroTime(state, action){\r\n\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.key === action.payload.key) {\r\n                        item.pomodoroTime = action.payload.time;\r\n                        return { ...item }\r\n                    } else {\r\n\r\n                        return { ...item }\r\n                    }\r\n                }\r\n            );\r\n        },\r\n        setPomodoroT(state, action){\r\n            state.pomodoroTime = action.payload;\r\n           \r\n        },\r\n        addLocalStorageToArr(state, action){\r\n            const lol = JSON.parse(action.payload)\r\n            state.arrOfTasks = lol;\r\n        },\r\n        deleteTask(state, action) {\r\n            state.arrOfTasks = state.arrOfTasks.filter(item => item.key !== action.payload);\r\n\r\n            \r\n        },\r\n\r\n        pomodoroCheckToFalse(state){\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.buttonStartTimer = false;\r\n                        return { ...item }\r\n                    } else {\r\n                        return { ...item }\r\n                    }\r\n                }\r\n            )\r\n        },\r\n        incdonePomodoros(state, action) {\r\n            state.donePomodoros = state.donePomodoros + 1;\r\n        },\r\n\r\n        donePomodorosAddToArr(state) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.donePomodoros = item.donePomodoros + 1;\r\n                        return { ...item }\r\n                    } else {\r\n                        return { ...item }\r\n                    }\r\n                }\r\n            )\r\n        },\r\n\r\n        incPomodoro(state, action) {\r\n            state.incDec = state.incDec + 1;\r\n        },\r\n\r\n        decPomodoro(state, action) {\r\n            if (state.incDec > 1) {\r\n                state.incDec = state.incDec - 1;\r\n            }\r\n        },\r\n        clearPomodoroCounter(state) {\r\n            state.incDec = 1;\r\n        },\r\n        checkPomodor(state, action) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.key === action.payload && item.pomodoroCheck === false) {\r\n                        item.pomodoroCheck = true;\r\n                        return { ...item }\r\n                    } else {\r\n                        item.buttonStartTimer = false;\r\n\r\n                        item.pomodoroCheck = false;\r\n                        return { ...item }\r\n                    }\r\n                }\r\n            );\r\n\r\n        },\r\n        reCheckPomodor(state, action) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.pomodoroCheck = false;\r\n                        item.pomodoroCheck = false;\r\n                        item.pomodoroCheck = true;\r\n                        return { ...item }\r\n                    } else {\r\n                        \r\n                        return { ...item }\r\n                    }\r\n                }\r\n            );\r\n\r\n        },\r\n        uncheckPomodor(state, action) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                item => {\r\n                    if (item.key === action.payload && item.pomodoroCheck === false) {\r\n                        return { ...item }\r\n                    } else {\r\n                        item.buttonStartTimer = false;\r\n                        item.pomodoroCheck = false;\r\n                        return { ...item }\r\n                    }\r\n                }\r\n            );\r\n\r\n        },\r\n        setTimerOfPomodoro(state, action) {\r\n            state.pomodoroTime = action.payload;\r\n\r\n\r\n        },\r\n\r\n        buttonStartTimerToggle(state) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                (item, i) => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.buttonStartTimer = !item.buttonStartTimer;\r\n                        return { ...item }\r\n                    } else {\r\n                        item.buttonStartTimer = false;\r\n                        return { ...item }\r\n                    }\r\n                }\r\n\r\n            );\r\n        },\r\n        buttonStartTimerToFalse(state) {\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                (item, i) => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.buttonStartTimer = false;\r\n                        return { ...item }\r\n                    } else {\r\n                        item.buttonStartTimer = false;\r\n                        return { ...item }\r\n                    }\r\n                }\r\n\r\n            );\r\n        },\r\n\r\n        taskIsDone(state){\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                (item, i) => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.taskIsDone = true;\r\n                        return { ...item }\r\n                    } else {\r\n                        \r\n                        return { ...item }\r\n                    }\r\n                }\r\n\r\n            );\r\n        },\r\n\r\n\r\n        setPonodoroClickTask(state){\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                (item, i) => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.taskState = \"Pomodoro\";\r\n                        return { ...item }\r\n                    } else {\r\n                        return { ...item }\r\n                    }\r\n                }\r\n\r\n            );\r\n        },\r\n        setBreakeClickTask(state){\r\n            state.arrOfTasks = state.arrOfTasks.map(\r\n                (item, i) => {\r\n                    if (item.pomodoroCheck === true) {\r\n                        item.taskState = \"Breake\";\r\n                        return { ...item }\r\n                    } else {\r\n                        return { ...item }\r\n                    }\r\n                }\r\n\r\n            );\r\n        },\r\n        deleteAllTasks(state){\r\n            state.arrOfTasks = state.arrOfTasks.filter(item => item.key == \"2222\");\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const addTaskActions = addTaskReducer.actions;\r\n\r\nexport default addTaskReducer;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst HeaderReducer = createSlice({\r\n    name:'header',\r\n    initialState: {openPopUpSettings: false, openAuth: false, soundCheck:\"1\",infinitMod: false},\r\n    reducers: {\r\n        setOpenPopUpSettings(state){\r\n            state.openPopUpSettings = true;\r\n        },\r\n        setClosePopUpSettings(state){\r\n            state.openPopUpSettings = false;\r\n        },\r\n        setOpenAuth(state){\r\n            state.openAuth = true;\r\n        },\r\n        setCloseAuth(state){\r\n            state.openAuth = false;\r\n        },\r\n        setsoundCheck(state, action){\r\n            state.soundCheck = action.payload;\r\n        },\r\n        setInfinitMod(state){\r\n            state.infinitMod = true;\r\n        },\r\n        setNoInfinitMod(state){\r\n            state.infinitMod = false;\r\n        }\r\n    }\r\n})\r\n\r\nexport const HeaderActions =  HeaderReducer.actions;\r\n\r\nexport default HeaderReducer;\r\n\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst AuthReducer = createSlice({\r\n    name:'auth',\r\n    initialState: {tokenId:\"none\",},\r\n    reducers: {\r\n        setTokenId(state, action){\r\n            if(action.payload){\r\n                state.tokenId = action.payload;\r\n            }\r\n        },\r\n\r\n\r\n    }\r\n})\r\n\r\nexport const AuthActions =  AuthReducer.actions;\r\n\r\nexport default AuthReducer;\r\n\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport timerReducer from './timerReducer';\r\nimport addTaskReducer from \"./addTaskReducer\";\r\nimport HeaderReducer from \"./HeaderReducer\";\r\nimport AuthReducer from \"./AuthReducer\";\r\n\r\n\r\nconst store = configureStore({\r\n    \r\n    reducer:{timer: timerReducer.reducer, \r\n        addTask: addTaskReducer.reducer, \r\n        header: HeaderReducer.reducer, \r\n        auth:AuthReducer.reducer}\r\n})\r\n\r\nexport default store;","import React from \"react\";\r\nimport styles from './ShowTime.module.css';\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const ShowTime = () => {\r\n\r\n    const timer = useSelector(state => state.timer.time);\r\n\r\n    return (\r\n        <div className={styles.timer}>\r\n            {(timer / 60 % 60) >= 10 ? Math.floor(timer / 60 % 60) : `${\"0\" + Math.floor(timer / 60 % 60)}`}\r\n            :\r\n            {(timer % 60) >= 10 ? Math.floor(timer % 60) : `${\"0\" + Math.floor(timer % 60)}`}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { timerActions } from \"../../store/timerReducer\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\n\r\n\r\n\r\nimport styles from './StartStopButton.module.css';\r\n\r\nexport const StartStopButton = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const startButtonInfo = useSelector(state=> state.timer.startButtonInfo);\r\n    const arrOfTasks  = useSelector(state=> state.addTask.arrOfTasks);\r\n    \r\n\r\n    const startStopHendlerProps = () => {\r\n        dispatch(timerActions.toggle(arrOfTasks));\r\n        dispatch(timerActions.showButtonInfo());\r\n        dispatch(addTaskActions.buttonStartTimerToggle());   \r\n    }\r\n\r\n    return (\r\n        <button className={styles.button} onClick={startStopHendlerProps}>{startButtonInfo}</button>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { ShowTime } from \"../ShowTimeComponent/ShowTime.component\";\r\nimport { StartStopButton } from \"../StartStopButtonComponent/StartStopButton.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { timerActions } from \"../../store/timerReducer\";\r\nimport { addTaskActions } from \"../../store/addTaskReducer\";\r\n\r\n\r\nimport styles from \"./Time.module.css\";\r\n\r\nexport const TimerComponent = () => {\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    const stateOfPomodoroSkipStateButton = useSelector(state => state.timer.checkStateOfPomodoroSkipStateButton);\r\n    const timeOfPomodoro = useSelector(state => state.addTask.pomodoroTime);\r\n    // dispatch(timerActions.setTimer(timeOfPomodoro));\r\n    const PomodoroTimer = useSelector((state => state.timer.setTimerOfPomodoro)) * 60;\r\n    const timer = useSelector(state => state.timer.time);\r\n    const skipOnButton = useSelector(state => state.addTask.taskState);\r\n    const taskState = useSelector(state => state.timer.pomodoroBreakState);\r\n    \r\n    // useEffect(() => {\r\n    //     dispatch(timerActions.setTimer(PomodoroTimer));\r\n    // },[PomodoroTimer]);\r\n    useEffect(()=>{\r\n        if (localStorage.getItem(\"pomodoroTime\")) {\r\n\r\n            dispatch(timerActions.setTimer(localStorage.getItem(\"pomodoroTime\")))\r\n        } else {\r\n\r\n            dispatch(timerActions.setTimer(PomodoroTimer));\r\n        }\r\n    },[])\r\n   //Извлечение массива с тасками в localStorage\r\n   useEffect(()=>{     \r\n       const lol = localStorage.getItem('arr')\r\n       if(lol){\r\n           dispatch(addTaskActions.addLocalStorageToArr(lol))\r\n       }\r\n    },[]);\r\n    \r\n    const selectPomodoroMod = () => {\r\n        dispatch(timerActions.selectPomodoroMode());\r\n    }\r\n\r\n    const selectBreackMod = () => {\r\n        dispatch(timerActions.selectBreackMode());\r\n    }\r\n    const skipTimerHendler = () => {\r\n        dispatch(addTaskActions.skipTimer());\r\n    }\r\n    const PomodoroTimerHendler = () => {\r\n\r\n        if (stateOfPomodoroSkipStateButton == \"none\") {\r\n            dispatch(addTaskActions.setBreakeClickTask());\r\n            \r\n        }\r\n        else if (stateOfPomodoroSkipStateButton == \"none2\") {\r\n            dispatch(addTaskActions.setPonodoroClickTask());\r\n        }\r\n        dispatch(timerActions.changeHelper());\r\n        \r\n    }\r\n    const infinitMode = useSelector((state => state.header.infinitMod));\r\n    const [time, setComponentTimer] = useState(1500);\r\n    \r\n    // if(infinitMode){\r\n    //     let interval = null;\r\n\r\n    //     if (changeTimer === true) {\r\n    //         if (time > 0) {\r\n    //             setComponentTimer(time => time - 1);\r\n\r\n                \r\n    //             dispatch(timerActions.setTimer(time));\r\n    //             if (skipTimer == \"Breake\" && stateOfPomodoroSkipStateButton == \"none\") {\r\n\r\n    //                 dispatch(timerActions.selectBreackMode());\r\n    //                 localStorage.setItem('selectMode', \"breake\");\r\n    //                 dispatch(timerActions.setTimer(BreakeTimerSelector));\r\n    //                 setComponentTimer(BreakeTimerSelector);\r\n    //                 dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n    //                 dispatch(timerActions.setStart());\r\n    //                 dispatch(addTaskActions.buttonStartTimerToFalse());\r\n    //                 dispatch(timerActions.togglestartStopButton());\r\n    //                 dispatch(timerActions.changeHelperFalse());\r\n\r\n\r\n    //             } else if (skipTimer == \"Pomodoro\" && stateOfPomodoroSkipStateButton == \"none2\") {\r\n    //                 //dispatch(addTaskActions.setPomodoroTime({ key: props.taskKey, time: st }));\r\n    //                 console.log(\"fgdfhtfhfgh\");\r\n    //                 dispatch(timerActions.setStart());\r\n    //                 dispatch(timerActions.selectPomodoroMode());\r\n    //                 localStorage.setItem('selectMode', \"pomodoro\");\r\n    //                 dispatch(timerActions.setTimer(PomodoroTimer));\r\n    //                 dispatch(timerActions.togglestartStopButton());\r\n    //                 dispatch(addTaskActions.donePomodorosAddToArr());\r\n    //                 setComponentTimer(PomodoroTimer);\r\n    //                 dispatch(addTaskActions.pomodoroCheckToFalse());\r\n    //                 dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n    //                 dispatch(addTaskActions.buttonStartTimerToFalse());\r\n    //                 if (props.propsdonePomodoros + 1 == props.countOfPomodoros) {\r\n    //                     dispatch(addTaskActions.taskIsDone());\r\n    //                     dispatch(addTaskActions.uncheckPomodor(props.taskKey));\r\n    //                 };\r\n    //                 dispatch(timerActions.changeHelperFalse());\r\n\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className={styles.mainTimeBlock}>\r\n            <div className={styles.pomodoroBreakeButtonsContainer}>\r\n                <div className={taskState === true ? styles.pomodorocheckButton : \"none\"} >Помодоро</div>\r\n                <div className={taskState === false ? styles.breakecheckButton : \"none\"}  >Перерыв</div>\r\n            </div>\r\n            <ShowTime className={styles.timer} timer={timer} ></ShowTime>\r\n            <div className={styles.StartButtonAndSkippButtonContainer}>\r\n                <StartStopButton ></StartStopButton>\r\n                <button className={styles.skipButtonClass} onClick={PomodoroTimerHendler}>▶▶</button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\nimport styles from \"./IncDecPomodor.module.css\"\r\n\r\nexport const IncDecPomodor = () => {\r\n\r\n    const dispach = useDispatch();\r\n    const incDec = useSelector(state => state.addTask.incDec);\r\n\r\n    const incrementPomodorHendler = () => {\r\n        dispach(addTaskActions.incPomodoro())\r\n    };\r\n\r\n    const decrementPomodorHendler = () => {\r\n        dispach(addTaskActions.decPomodoro())\r\n    };\r\n\r\n    return (     \r\n        <div className={styles.incdecContainer}>\r\n            <div className={styles.incdecScreen}>{incDec}</div>\r\n           <button className={styles.incdecButton} onClick={incrementPomodorHendler}>˄</button>\r\n           <button className={styles.incdecButton} onClick={decrementPomodorHendler}>˅</button>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/sm-music-harp-1.673908bd.mp3\";","export default __webpack_public_path__ + \"static/media/2.d0d4ab8f.mp3\";","export default __webpack_public_path__ + \"static/media/3.943b6a89.mp3\";","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\nimport { timerActions } from \"../../store/timerReducer\";\r\n\r\nimport useSound from 'use-sound';\r\nimport boopSfx1 from '../Task/sm-music-harp-1.mp3';\r\nimport boopSfx2 from '../Task/2.mp3';\r\nimport boopSfx3 from '../Task/3.mp3';\r\n\r\nimport styles from './Task.module.css';\r\n\r\nexport const Task = (props) => {\r\n\r\n    const arr = useSelector(state => state.addTask.arrOfTasks);\r\n\r\n    const st = useSelector(state => state.addTask.pomodoroTime)\r\n\r\n    const PomodoroTimer = useSelector((state => state.timer.setTimerOfPomodoro)) * 60;\r\n    const BreakeTimerSelector = useSelector((state => state.timer.setBreakeOfPomodoro)) * 60;\r\n    const soundCheck = useSelector((state => state.header.soundCheck));\r\n\r\n    const dispatch = useDispatch();\r\n    let pomodoroTime;\r\n\r\n    const [time, setComponentTimer] = useState(props.pomororoTimeProps);\r\n    //const [time, setComponentTimer] = useState(props.pomororoTimeProps);\r\n    const [BreakeTimer, setBreakeTimer] = useState(BreakeTimerSelector);\r\n\r\n    const changeTimer = props.buttonStartTimer;\r\n    const pomodoroMode = useSelector(state => state.timer.pomodoroBreakState);\r\n    const skipstatic = useSelector(state => state.timer.skipstatic);\r\n\r\n    //const fdfs = useSelector(state => state.timer.pomodoroBreakState);\r\n\r\n    const skipTimer = props.propskipTimer;\r\n\r\n    const stateOfPomodoroSkipStateButton = useSelector(state => state.timer.checkStateOfPomodoroSkipStateButton);\r\n    const [play1] = useSound(boopSfx1);\r\n    const [play2] = useSound(boopSfx2);\r\n    const [play3] = useSound(boopSfx3);\r\n\r\n    // const lol = localStorage.getItem('arr');\r\n    // dispatch(addTaskActions.addLocalStorageToArr(lol));\r\n    //setComponentTimer(props.pomororoTimeProps)\r\n\r\n    // useEffect(()=>{\r\n    //     dispatch(addTaskActions.setPomodoroTime({ key: props.taskKey, time: PomodoroTimer }));\r\n\r\n    // },[]);\r\n\r\n    //dispatch(addTaskActions.setTimerOfPomodoro(PomodoroTimer));\r\n\r\n    useEffect(() => {\r\n        dispatch(addTaskActions.reCheckPomodor(props.taskKey));\r\n    }, []);\r\n    useEffect(() => {\r\n        let interval = null;\r\n\r\n\r\n        if (changeTimer === true) {\r\n            interval = setTimeout(() => {\r\n\r\n\r\n                if (time > 0) {\r\n                    setComponentTimer(time => time - 1);\r\n\r\n                    dispatch(addTaskActions.setPomodoroTime({ key: props.taskKey, time: time }));\r\n                    dispatch(timerActions.setTimer(time));\r\n                    if (skipTimer == \"Breake\" && stateOfPomodoroSkipStateButton == \"none\") {\r\n\r\n                        dispatch(timerActions.selectBreackMode());\r\n                        localStorage.setItem('selectMode', \"breake\");\r\n                        dispatch(timerActions.setTimer(BreakeTimerSelector));\r\n                        setComponentTimer(BreakeTimerSelector);\r\n                        dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n                        dispatch(timerActions.setStart());\r\n                        dispatch(addTaskActions.buttonStartTimerToFalse());\r\n                        dispatch(timerActions.togglestartStopButton());\r\n                        dispatch(timerActions.changeHelperFalse());\r\n\r\n\r\n                    } else if (skipTimer == \"Pomodoro\" && stateOfPomodoroSkipStateButton == \"none2\") {\r\n                        //dispatch(addTaskActions.setPomodoroTime({ key: props.taskKey, time: st }));\r\n                        dispatch(timerActions.setStart());\r\n                        dispatch(timerActions.selectPomodoroMode());\r\n                        localStorage.setItem('selectMode', \"pomodoro\");\r\n                        dispatch(timerActions.setTimer(PomodoroTimer));\r\n                        dispatch(timerActions.togglestartStopButton());\r\n                        dispatch(addTaskActions.donePomodorosAddToArr());\r\n                        setComponentTimer(PomodoroTimer);\r\n                        dispatch(addTaskActions.pomodoroCheckToFalse());\r\n                        dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n                        dispatch(addTaskActions.buttonStartTimerToFalse());\r\n                        if (props.propsdonePomodoros + 1 == props.countOfPomodoros) {\r\n                            dispatch(addTaskActions.taskIsDone());\r\n                            dispatch(addTaskActions.uncheckPomodor(props.taskKey));\r\n                        };\r\n                        dispatch(timerActions.changeHelperFalse());\r\n\r\n                    }\r\n                }\r\n\r\n                else if (time === 0 && pomodoroMode === true) {\r\n                    setComponentTimer(BreakeTimer);\r\n                    dispatch(timerActions.setTimer(BreakeTimer));\r\n\r\n                    dispatch(timerActions.selectBreackMode());\r\n                    localStorage.setItem('selectMode', \"breake\");\r\n                    dispatch(addTaskActions.buttonStartTimerToFalse());\r\n                    dispatch(timerActions.setStart());\r\n                    dispatch(timerActions.togglestartStopButton());\r\n\r\n                    dispatch(addTaskActions.setBreakeClickTask());\r\n                    dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n\r\n                    if (soundCheck == \"1\") {\r\n\r\n                        play1();\r\n                    } else if (soundCheck == \"2\") {\r\n                        play2();\r\n                    } else if (soundCheck == \"3\") {\r\n                        play3();\r\n                    }\r\n\r\n\r\n\r\n                }\r\n                else if (time === 0 && pomodoroMode === false) {\r\n                    dispatch(timerActions.setStart());\r\n                    dispatch(timerActions.selectPomodoroMode());\r\n                    localStorage.setItem('selectMode', \"pomodoro\");\r\n                    dispatch(timerActions.setTimer(PomodoroTimer));\r\n                    dispatch(addTaskActions.donePomodorosAddToArr());\r\n                    setComponentTimer(PomodoroTimer);\r\n                    dispatch(addTaskActions.pomodoroCheckToFalse());\r\n                    dispatch(addTaskActions.buttonStartTimerToFalse());\r\n                    if (props.propsdonePomodoros + 1 == props.countOfPomodoros) {\r\n                        dispatch(addTaskActions.taskIsDone());\r\n                        dispatch(addTaskActions.checkPomodor(props.taskKey));\r\n                    };\r\n                    dispatch(timerActions.togglestartStopButton());\r\n\r\n                    dispatch(addTaskActions.setPonodoroClickTask());\r\n                    dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n\r\n                    if (soundCheck == \"1\") {\r\n\r\n                        play1();\r\n                    } else if (soundCheck == \"2\") {\r\n                        play2();\r\n                    } else if (soundCheck == \"3\") {\r\n                        play3();\r\n                    }\r\n                    dispatch(addTaskActions.setPomodoroTime({ key: props.taskKey, time: PomodoroTimer }));\r\n                    \r\n\r\n                };\r\n                //clearTimeout(interval)\r\n            }\r\n                , 1000);\r\n        }\r\n\r\n        else if (changeTimer === false && skipTimer == \"Breake\" && stateOfPomodoroSkipStateButton === \"none\" && skipstatic) {\r\n\r\n            dispatch(timerActions.selectBreackMode());\r\n            localStorage.setItem('selectMode', \"breake\");\r\n            dispatch(timerActions.setTimer(BreakeTimer));\r\n            setComponentTimer(BreakeTimer);\r\n            dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n            //dispatch(addTaskActions.setPomodoroOnState()); \r\n            dispatch(timerActions.setStart());\r\n\r\n            dispatch(addTaskActions.buttonStartTimerToFalse());\r\n            dispatch(timerActions.togglestartStopButton());\r\n            dispatch(timerActions.changeHelperFalse());\r\n            clearTimeout(interval);\r\n        }\r\n        else if (changeTimer === false && skipTimer == \"Pomodoro\" && stateOfPomodoroSkipStateButton === \"none2\" && skipstatic) {\r\n            dispatch(timerActions.setStart());\r\n            dispatch(timerActions.selectPomodoroMode());\r\n            localStorage.setItem('selectMode', \"pomodoro\");\r\n            dispatch(timerActions.setTimer(PomodoroTimer));\r\n            dispatch(timerActions.togglestartStopButton());\r\n            dispatch(addTaskActions.donePomodorosAddToArr());\r\n            setComponentTimer(PomodoroTimer);\r\n            dispatch(addTaskActions.pomodoroCheckToFalse());\r\n            if (props.propsdonePomodoros + 1 == props.countOfPomodoros) {\r\n                dispatch(addTaskActions.taskIsDone());\r\n                dispatch(addTaskActions.uncheckPomodor(props.taskKey));\r\n            };\r\n            dispatch(timerActions.togglestartStopButton());\r\n            dispatch(addTaskActions.buttonStartTimerToFalse());\r\n\r\n            dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n            dispatch(timerActions.changeHelperFalse());\r\n\r\n            \r\n        }\r\n\r\n        \r\n\r\n\r\n        return () => { clearTimeout(interval) }; //Сброс эффекта\r\n    }, [time, changeTimer, skipTimer, dispatch]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.checPomodoroProp === true) {\r\n            dispatch(timerActions.setTimer(time));\r\n        }\r\n    }, [])\r\n\r\n    //Добавление массива с тасками в localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"arr\", JSON.stringify(arr));\r\n    }, [arr]);\r\n\r\n    const deleteTaskHendler = () => {\r\n        dispatch(addTaskActions.deleteTask(props.taskKey));\r\n        dispatch(timerActions.setStart());\r\n        dispatch(timerActions.setTimer(PomodoroTimer));\r\n        localStorage.setItem('selectMode', \"pomodoro\");\r\n        dispatch(timerActions.selectPomodoroMode());\r\n\r\n        localStorage.setItem(\"arr\", JSON.stringify(arr));\r\n        let lol = JSON.parse(localStorage.getItem(\"arr\")).length;\r\n        if (lol === 1) {\r\n            localStorage.setItem(\"arr\", \"\")\r\n        }\r\n\r\n    };\r\n\r\n    const checkPomodoroHendler = () => {\r\n\r\n        dispatch(timerActions.toggleStartButtonfromTask(props.checPomodoroProp));\r\n        dispatch(timerActions.showButtonInfo());\r\n        dispatch(addTaskActions.checkPomodor(props.taskKey));\r\n        dispatch(timerActions.setTimer(time));\r\n        if (props.propskipTimer === \"Pomodoro\") {\r\n            //dispatch(addTaskActions.setPonodoroClickTask());\r\n            dispatch(timerActions.selectPomodoroMode());\r\n            localStorage.setItem('selectMode', \"pomodoro\");\r\n            dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n        };\r\n        if (props.propskipTimer === \"Breake\") {\r\n            //dispatch(addTaskActions.setBreakeClickTask());\r\n            dispatch(timerActions.selectBreackMode());\r\n            localStorage.setItem('selectMode', \"breake\");\r\n            dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n        }\r\n        localStorage.setItem(\"arr\", JSON.stringify(arr));\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            {\r\n                !props.propTaskiIsDone && (\r\n                    <div className={props.checPomodoroProp ? styles.taskContainerCheck : styles.taskContainer} onClick={checkPomodoroHendler}>\r\n                        <div className={props.propTaskiIsDone ? styles.taskTextDone : styles.taskText}>\r\n                            {props.items}\r\n                        </div>\r\n                        <div className={styles.countOfPomodoros}>\r\n                            {props.propsdonePomodoros}/{props.countOfPomodoros}-\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            {\r\n                props.propTaskiIsDone && (\r\n                    <div className={styles.taskContainerDone}>\r\n                        <div className={props.propTaskiIsDone ? styles.taskTextDone : styles.taskText}>\r\n                            {props.items}\r\n                        </div>\r\n                        <div className={styles.countOfPomodoros}>\r\n                            {props.propsdonePomodoros}/{props.countOfPomodoros}-\r\n                            {time}\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <div className={styles.deleteButtonContainer}>\r\n                <button className={styles.deleteTaskBtton} onClick={deleteTaskHendler}>Удалить</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport { IncDecPomodor } from '../IncDecPomodor/IncDecPomodor';\r\nimport { Task } from '../Task/Tack';\r\nimport styles from './AddTask.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { timerActions } from \"../../store/timerReducer\";\r\nimport { HeaderActions } from '../../store/HeaderReducer';\r\n\r\n\r\nexport const AddTask = () => {\r\n\r\n    const [toggleTask, usetoggleTask] = useState(true);\r\n    const dispatch = useDispatch();\r\n    const inputInfo = useSelector(state => state.addTask.task);\r\n    const taskArr = useSelector(state => state.addTask.arrOfTasks);\r\n    const countOfPomodoros = useSelector(state => state.addTask.incDec);\r\n    const PomodoroTimer = useSelector((state => state.timer.setTimerOfPomodoro)) * 60;\r\n    const [recomend, recomendChange] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"pomodoroTime\")) {\r\n            let lol = localStorage.getItem(\"pomodoroTime\");\r\n            //dispatch(timerActions.setTimerOfPomodoro(lol/60));\r\n            dispatch(addTaskActions.setTimerOfPomodoro(lol));\r\n        };\r\n        if (localStorage.getItem(\"infinitMod\")) {\r\n            dispatch(HeaderActions.setInfinitMod());\r\n        };\r\n\r\n    })\r\n    const addTaskHendler = (e) => {\r\n        dispatch(addTaskActions.addTask(e.target.value));\r\n    };\r\n\r\n    const pushTaskButtonHendler = () => {\r\n        if (inputInfo === \"\") {\r\n            recomendChange(true);\r\n            return\r\n        };\r\n        recomendChange(false);\r\n        dispatch(addTaskActions.addTaskToArr({ inputInfo: inputInfo, countOfPomodoros: countOfPomodoros, pomodoroCheck: false }));\r\n        dispatch(addTaskActions.addTask(\"\"));\r\n        dispatch(addTaskActions.clearPomodoroCounter());\r\n\r\n        const newTaskArr = taskArr.filter(item => item.pomodoroCheck === true);\r\n        if (newTaskArr.length === 1) {\r\n            if (newTaskArr[0].taskState === \"Pomodoro\") {\r\n                dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n            } else if (newTaskArr[0].taskState === \"Breake\") {\r\n                dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n            }\r\n        }\r\n    };\r\n\r\n    const deleteAllTaskHendler = () => {\r\n        dispatch(addTaskActions.deleteAllTasks());\r\n        dispatch(timerActions.selectPomodoroMode());\r\n\r\n        if (localStorage.getItem(\"pomodoroTime\")) {\r\n\r\n            dispatch(timerActions.setTimer(localStorage.getItem(\"pomodoroTime\")))\r\n        } else {\r\n\r\n            dispatch(timerActions.setTimer(PomodoroTimer));\r\n        }\r\n        localStorage.setItem('selectMode', \"pomodoro\");\r\n        localStorage.setItem(\"arr\", '');\r\n    };\r\n    const infinitMode = useSelector((state => state.header.infinitMod));\r\n\r\n    return (\r\n        <div className={infinitMode ? styles.taskContainerNone : styles.taskContainer}>\r\n\r\n            {!toggleTask && (\r\n                <div onClick={() => (usetoggleTask(!toggleTask))} className={styles.closeaTask}>\r\n                    Добавить задачу {toggleTask}\r\n                </div>\r\n            )}\r\n\r\n            {toggleTask && (\r\n\r\n                <div className={styles.addTask}>\r\n                    <div className={styles.taskInputContainer}>\r\n\r\n                        <input placeholder=\"Введите задачу\" className={styles.inputTask} value={inputInfo} onChange={addTaskHendler} />\r\n\r\n                        <IncDecPomodor />\r\n                    </div>\r\n\r\n                    <div className={styles.addTaskFotter}>\r\n                        {recomend && (<div className={styles.recomend}>Введите задачу</div>)}\r\n                        <button className={styles.inputButton} onClick={pushTaskButtonHendler}>Сохранить</button>\r\n                        {/* <button className={styles.cancelTaskButton} onClick={() => (usetoggleTask(!toggleTask))}>Отмена</button> */}\r\n                        <button className={styles.cancelTaskButton} onClick={() => (deleteAllTaskHendler())} >Удалить все</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n            <div>\r\n                {taskArr.map((item) => (\r\n                    <Task buttonStartTimer={item.buttonStartTimer}\r\n                        checPomodoroProp={item.pomodoroCheck}\r\n                        key={item.key}\r\n                        taskKey={item.key}\r\n                        items={item.act}\r\n                        countOfPomodoros={item.countOfPomodoros}\r\n                        pomororoTimeProps={item.pomodoroTime}\r\n                        propsdonePomodoros={item.donePomodoros}\r\n                        propTaskiIsDone={item.taskIsDone}\r\n                        propskipTimer={item.taskState}\r\n\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {HeaderActions} from '../../store/HeaderReducer';\r\nimport { AuthActions } from '../../store/AuthReducer';\r\n\r\nimport { timerActions } from '../../store/timerReducer';\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\n\r\nimport styles from \"./Header.module.css\"\r\n\r\nexport const Header = () =>{\r\n    const dispatch = useDispatch();\r\n\r\n    const openAuth = useSelector(state => state.header.openPopUpSettings);\r\n    const idToken = useSelector(state => state.auth.tokenId);\r\n    const openPopUpHendler = () => {\r\n        dispatch(HeaderActions.setOpenPopUpSettings());\r\n    }\r\n\r\n    const openAuthHendler = () => {\r\n        dispatch(HeaderActions.setOpenAuth());\r\n    }\r\n\r\n    const signOutHendler = () => {\r\n       localStorage.clear();\r\n       dispatch(AuthActions.setTokenId('none'));\r\n\r\n    };\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"pomodoroTime\")){\r\n            let lol = localStorage.getItem(\"pomodoroTime\");\r\n            dispatch(timerActions.setTimerOfPomodoro(lol/60));\r\n            //dispatch(addTaskActions.setTimerOfPomodoro(lol));\r\n        }\r\n    })\r\n    useEffect(()=>{\r\n        if(localStorage.getItem(\"BreakeTime\")){\r\n            let lol = localStorage.getItem(\"BreakeTime\");\r\n            dispatch(timerActions.setBreakeTimer(lol/60));\r\n            //dispatch(addTaskActions.setTimerOfPomodoro(lol));\r\n        }\r\n    })\r\n    useEffect(()=>{\r\n        if(localStorage.getItem('selectMode')){\r\n            if(localStorage.getItem('selectMode') === \"breake\"){\r\n                dispatch(timerActions.checkStateOfPomodoroSkipState(\"none2\"));\r\n                dispatch(timerActions.selectBreackMode());\r\n            }else if(localStorage.getItem('selectMode') === \"pomodoro\"){\r\n                dispatch(timerActions.checkStateOfPomodoroSkipState(\"none\"));\r\n                dispatch(timerActions.selectPomodoroMode());\r\n            }\r\n        }\r\n    });\r\n\r\n    return(\r\n        <header className={styles.headerMainContainer}>\r\n            <div className={styles.headerLogo}>\r\n                Помодоро\r\n            </div>\r\n            <div className={styles.headerButtonsContainer}>\r\n                <button className={styles.headerButtonSettings} onClick={openPopUpHendler}>Настройки</button>\r\n                {(idToken === \"none\") && <button className={styles.headerButtonLogin} onClick={openAuthHendler} >Войти</button>}\r\n                {(idToken !== \"none\")  && <button className={styles.headerButtonLogin} onClick={signOutHendler} >Выйти</button>}\r\n            </div>\r\n        </header>\r\n    )\r\n}","/* eslint-disable no-undef */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from \"./PopUpHeaderSetting.module.css\"\r\nimport { HeaderActions } from '../../store/HeaderReducer';\r\nimport userEvent from '@testing-library/user-event';\r\nimport { timerActions } from \"../../store/timerReducer\";\r\nimport { addTaskActions } from '../../store/addTaskReducer';\r\n\r\n\r\nimport useSound from 'use-sound';\r\nimport boopSfx1 from '../Task/sm-music-harp-1.mp3';\r\nimport boopSfx2 from '../Task/2.mp3';\r\nimport boopSfx3 from '../Task/3.mp3';\r\n\r\nexport const PopUpHeaderSetting = () => {\r\n\r\n    const PomodoroTimer = useSelector((state => state.timer.setTimerOfPomodoro));\r\n    const BreakeTimer = useSelector((state => state.timer.setBreakeOfPomodoro));\r\n\r\n    const [alarmVars, setAlarmVars] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const openPopUpSettings = useSelector(state => state.header.openPopUpSettings);\r\n\r\n    const rer = useSelector(state => state.addTask.pomodoroTime);\r\n\r\n    const soundCheck = useSelector((state => state.header.soundCheck));\r\n    const [play1] = useSound(boopSfx1);\r\n    const [play2] = useSound(boopSfx2);\r\n    const [play3] = useSound(boopSfx3);\r\n\r\n    const closePopUpHendler = (e) => {\r\n\r\n        if (!e.target.closest(`.${styles.popUpContent}`)) {\r\n            dispatch(HeaderActions.setClosePopUpSettings());\r\n        };\r\n\r\n    };\r\n\r\n    const closePopUpHendlerX = (e) => {\r\n        dispatch(HeaderActions.setClosePopUpSettings());\r\n    };\r\n\r\n\r\n    const openPopUpAlarmVarsHendler = () => {\r\n        setAlarmVars(!alarmVars);\r\n    };\r\n    const setChangesHendler = () => {\r\n\r\n    };\r\n    const setPomodoroTimerHendler = (e) => {\r\n        dispatch(timerActions.setTimerOfPomodoro(e.target.value));\r\n\r\n        localStorage.setItem(\"pomodoroTime\", e.target.value * 60);\r\n        // const pomodoroTime = localStorage.getItem(\"pomodoroTime\");\r\n        //dispatch(addTaskActions.setTimerOfPomodoro(pomodoroTime));     \r\n    };\r\n    const setBreakeTimerHendler = (e) => {\r\n        dispatch(timerActions.setBreakeTimer(e.target.value));\r\n\r\n        localStorage.setItem(\"BreakeTime\", e.target.value * 60);\r\n        //const BreakeTime = localStorage.getItem(\"pomodoroTime\");\r\n        //dispatch(addTaskActions.setTimerOfPomodoro(pomodoroTime)); \r\n\r\n    };\r\n    const changeSoundHendler = (e) => {\r\n        // dispatch(timerActions.setBreakeTimer(e.target.value));\r\n        dispatch(HeaderActions.setsoundCheck(e.target.outerText));\r\n        setAlarmVars(!alarmVars);\r\n\r\n        if (e.target.outerText === \"1\") {\r\n            play1();\r\n        } else if (e.target.outerText === \"2\") {\r\n            play2();\r\n        } else if (e.target.outerText === \"3\") {\r\n            play3();\r\n        }\r\n\r\n    }\r\n    const setInfinitTackModHendler = (e) => {\r\n        let lol = e.target.parentElement.children[1].checked;\r\n        //console.log(e.target.parentElement.children[1]);\r\n        e.target.parentElement.children[1].checked = !lol;\r\n\r\n\r\n        if (e.target.parentElement.children[1].checked === true) {\r\n            dispatch(HeaderActions.setInfinitMod());\r\n            dispatch(addTaskActions.uncheckPomodor(\"2\"));\r\n            dispatch(addTaskActions.addTaskToArr({ inputInfo: \"Нет\", countOfPomodoros: 10000, pomodoroCheck: true }));\r\n            localStorage.setItem('infinitMod', true);\r\n\r\n\r\n        } else {\r\n            dispatch(HeaderActions.setNoInfinitMod());\r\n            dispatch(addTaskActions.uncheckPomodor(\"2\"));\r\n            dispatch(addTaskActions.deleteLastElemOfArr());\r\n            localStorage.setItem('infinitMod', \"\");\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={openPopUpSettings ? styles.popUp : styles.popUpClose} onClick={closePopUpHendler}>\r\n                <div className={styles.popUpContent} >\r\n                    {/* Заголовок */}\r\n                    <div className={styles.popUpContentHeader}>\r\n                        <div className={styles.popUpContentH1} >Настройки</div>\r\n                        <div className={styles.popUpContentExit} onClick={closePopUpHendlerX}>╳</div>\r\n                    </div>\r\n                    {/* Настройка времени */}\r\n                    <div className={styles.popUpContentTimeSetUp}>\r\n                        <div className={styles.popUpContentTimeSetUpHeader} > Время (минуты)</div>\r\n                        <div className={styles.popUpContentTimeSetUpInputs}>\r\n                            <div className={styles.popUpContentTimeSetUpInputOfPomodoro}>\r\n                                <div>Помодоро</div>\r\n                                <input type=\"text\" value={PomodoroTimer} onChange={setPomodoroTimerHendler} />\r\n                            </div>\r\n                            <div className={styles.popUpContentTimeSetUpInputOfBreake}>\r\n                                <div>Перерыв</div>\r\n                                <input type=\"text\" value={BreakeTimer} onChange={setBreakeTimerHendler} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Настройка звока */}\r\n                    <div className={styles.popUpContentAlarmSetUp}>\r\n                        <div className={styles.popUpContentAlarmHeader} >Звонок </div>\r\n                        <div className={styles.popUpContentAlarmInputs} onClick={openPopUpAlarmVarsHendler}>\r\n                            ˅\r\n\r\n                        </div>\r\n\r\n                        <div className={styles.popUpContentAlarmVars} onClick={changeSoundHendler}>\r\n                            {(alarmVars) && (\r\n                                <div>\r\n\r\n                                    <div className={styles.popUpContentAlarmVar}>\r\n                                        1\r\n                                    </div>\r\n                                    <div className={styles.popUpContentAlarmVar}>\r\n                                        2\r\n                                    </div>\r\n                                    <div className={styles.popUpContentAlarmVar}>\r\n                                        3\r\n                                    </div>\r\n\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* <div className={styles.popUpContentInfinitTask}>\r\n                            <button className={styles.popUpContentInfinitTask} onClick={setInfinitTackModHendler}> ДА </button>\r\n                            <button className={styles.popUpContentNoInfinitTask}> Нет </button>\r\n                        </div> */}\r\n\r\n\r\n                    </div>\r\n                    <div className={styles.popUpContentChcketBox} >\r\n                        <div className={styles.popUpContentHeader}>Бесконечный режим</div>\r\n                        <input defaultChecked={(localStorage.getItem(\"infinitMod\")) && \"checked\"}  type=\"checkbox\" className={styles.checkbox}  />\r\n                        <label onClick={setInfinitTackModHendler}></label>\r\n                        {/* checked={(localStorage.getItem(\"infinitMod\")) && \"checked\"} */}\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","/* eslint-disable no-undef */\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from \"./Auth.module.css\";\r\nimport { HeaderActions } from '../../store/HeaderReducer';\r\nimport userEvent from '@testing-library/user-event';\r\nimport { timerActions } from \"../../store/timerReducer\";\r\nimport { AuthActions } from '../../store/AuthReducer';\r\n\r\n\r\n\r\nexport const Auth = () => {\r\n    // Хуки Ref для емейла и пароля формы\r\n    const emailInputRef = useRef();\r\n    const passwordInputRef = useRef();\r\n    // isLogin - зарегистрирован или нет\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    // isLoading - завершена ли загрузка или нет\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    // Вызов диспатча\r\n    const dispatch = useDispatch();\r\n    // Вызов стейта из ред-ра\r\n    const openAuth = useSelector(state => state.header.openAuth);\r\n    // Hendler закрытия попапа при нажатии вне попапа\r\n    const closePopUpHendler = (e) => {\r\n        if (!e.target.closest(`.${styles.popUpContent}`)) {\r\n            dispatch(HeaderActions.setCloseAuth());\r\n        };\r\n    };\r\n    // Hendler закрытия попапа при нажатии X\r\n    const closePopUpHendlerX = (e) => {\r\n        dispatch(HeaderActions.setCloseAuth());\r\n    };\r\n    // Hendler смены isLogin\r\n    const ChangeIsLoginHendler = (e) => {\r\n        setIsLogin(!isLogin);\r\n    };\r\n    //const idToken = useSelector(state => state.auth.idToken);\r\n\r\n\r\n\r\n    const idTokenToLocal = (idToken, time) => {\r\n        localStorage.setItem('idToken', idToken);\r\n        const timeSignIn = new Date().getTime();\r\n        const timeSignOut = new Date().getTime() + (24 * 3600 * 1000 * time);\r\n\r\n        localStorage.setItem('timeSignIn', timeSignOut);\r\n        localStorage.setItem('timeSignOut', timeSignOut);\r\n    };\r\n\r\n\r\n    dispatch(AuthActions.setTokenId(localStorage.getItem(\"idToken\")));\r\n\r\n\r\n    const [totalTime, settotalTime] = useState(1);\r\n    useEffect(() => {\r\n        const timeSignIn = new Date().getTime();\r\n        const timeSignOut = localStorage.getItem('timeSignOut');\r\n        if(timeSignOut){\r\n            const timer = setTimeout(() => {\r\n                settotalTime((+timeSignOut) - (+timeSignIn));\r\n                if (totalTime < 0) {\r\n                    dispatch(AuthActions.setTokenId(\"none\"));\r\n                    localStorage.clear();\r\n                    clearTimeout(timer);\r\n                }\r\n                clearTimeout(timer);\r\n            }, 1000);\r\n        }\r\n        \r\n    }, [totalTime]);\r\n\r\n    //Отправка формы\r\n    const submitFormHendler = (e) => {\r\n        e.preventDefault();\r\n        const enteredEmail = emailInputRef.current.value;\r\n        const enteredPassword = passwordInputRef.current.value;\r\n\r\n        setIsLoading(true);\r\n        let url;\r\n        if (isLogin) {\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAZ9v_-DcfftyzTjjjvIc3yWIYiw3vaSt8\";\r\n        } else {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAZ9v_-DcfftyzTjjjvIc3yWIYiw3vaSt8';\r\n        };\r\n        fetch(url,\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    email: enteredEmail,\r\n                    password: enteredPassword,\r\n                    returnSecureToken: true\r\n\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setIsLoading(false);\r\n                if (res.ok) {\r\n                    return res.json();\r\n                } else {\r\n                    return res.json().then(data => {\r\n                        let errorMessage = \"Регистрация провалена\";\r\n                        // if (data && data.error && data.error.message) {\r\n                        //     errorMessage = data.error.message;\r\n                        // };\r\n                        throw new Error(errorMessage);\r\n                    })\r\n                }\r\n            })\r\n            .then(data => {\r\n                dispatch(AuthActions.setTokenId(data.idToken));\r\n                idTokenToLocal(data.idToken, 30);\r\n            })\r\n            .then(() =>{\r\n                settotalTime(2);\r\n            })\r\n            .catch(err => {\r\n                alert(err.message);\r\n            });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={openAuth ? styles.popUp : styles.popUpClose} onClick={closePopUpHendler}>\r\n                <div className={styles.popUpContent} >\r\n                    {/* Заголовок */}\r\n                    <div className={styles.popUpContentHeader}>\r\n                        {!isLogin && <div className={styles.popUpContentH1} >Регистрация</div>}\r\n                        {isLogin && <div className={styles.popUpContentH1} >Войти</div>}\r\n                        <div className={styles.popUpContentExit} onClick={closePopUpHendlerX}>╳</div>\r\n                    </div>\r\n\r\n                    <form className={styles.authFormContainer} onSubmit={submitFormHendler}>\r\n                        <input  className={styles.authFormEmail} type=\"email\" placeholder=\"Введите логин\" ref={emailInputRef} />\r\n\r\n                        <input  className={styles.authFormPassword} type=\"password\" placeholder=\"Введите пароль\" ref={passwordInputRef} />\r\n\r\n                        {!isLoading && <button className={styles.authSubmitButton} type=\"submit\">\r\n                        {!isLogin && <div>Регистрация</div>}\r\n                        {isLogin && <div>Вход</div>}\r\n                            </button>}\r\n                        {isLoading && <p>Отправление запроса</p>}\r\n                    </form>\r\n\r\n                    {isLogin && <div className={styles.authFotter} onClick={ChangeIsLoginHendler}>Зарегистрироваться, если нет аккаунта</div>}\r\n\r\n                    {!isLogin && <div className={styles.authFotter}  onClick={ChangeIsLoginHendler}>Войти, если есть аккаунт</div>}\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}","import styles from './App.module.css';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { TimerComponent } from './components/TimeComponent/TimeComponent';\r\nimport {AddTask} from './components/addTask/AddTask';\r\nimport { Header } from './components/Header/Header';\r\nimport {PopUpHeaderSetting} from './components/PopUpHeaderSetting/PopUpHeaderSetting';\r\nimport { Auth } from './components/Auth/Auth';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const pomodoroMode = useSelector(state => state.timer.pomodoroBreakState);\r\n  const infinitMode = useSelector((state => state.header.infinitMod));\r\n\r\n  return (\r\n    <div className={pomodoroMode ? styles.App : styles.AppBreake}>\r\n      <Header></Header>\r\n      <PopUpHeaderSetting></PopUpHeaderSetting>\r\n      <Auth></Auth>\r\n      <TimerComponent />\r\n      <AddTask/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/index';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"incdecContainer\":\"IncDecPomodor_incdecContainer__FtPc0\",\"incdecScreen\":\"IncDecPomodor_incdecScreen__P_9Z1\",\"incdecButton\":\"IncDecPomodor_incdecButton__torY2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__28uyd\",\"AppBreake\":\"App_AppBreake__3d2kS\"};"],"sourceRoot":""}